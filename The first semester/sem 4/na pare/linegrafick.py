import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

x = [0,1,2,3,4,5]
y = [0,2,4,6,8,10]

# Инициализировать рисунок/Figure
# dpi -- количество пикселей на дюйм в рисунке
# figsize -- пропорции "поля" рисунка (ширина на высоту)
plt.figure(figsize=(8,5), dpi=100)

# Line 1

# Основные возможные аргументы функции plot. По умолчанию необходимы только x и y
#plt.plot(x,y, label='2x', color='green', linewidth=1, marker='.', linestyle='-', markersize=10, markeredgecolor='blue')

#нарисуем график первой функции -- 2x
#plt.plot(x,y, 'g.-', label='2x')
x1 = np.arange(0,10,0.1)
plt.plot(x1, x1*2, 'g', label='2X')

## Line 2

# С помощью numpy мы можем создавать массив из чисел с определенным интервалом функцией arange. np.linspace(..) делает то же самое, но с целыми числами
x2 = np.arange(0,5,0.1)

# Нарисуем часть второго графика как сплошную кривую -- квадрат значений x2
# Поскольку x2 -- массив numpy, мы можем это сделать просто "возведя в квадрат" массив
plt.plot(x2[:10], x2[:10]**2, 'r', label='X^2')

# Нарисуем часть графика пунктиром. 'r' после x и y означает красный цвет, '--' - рисовку пунктиром
plt.plot(x2[9:], x2[9:]**2, 'r--')

# Добавим заголовок (в fontdict нужен словарь, шрифт должен поддерживаться matplotlib'ом)
plt.title('Our First Graph!', fontdict={'fontname': 'sans-serif', 'fontsize': 20})

# Подпишем оси
plt.xlabel('X Axis')
plt.ylabel('Y Axis')

# Зададим какие-нибудь корявые "штрихи"/ticks на осях. в эти фунции можно передать любой список
plt.xticks([0,1.12,2.66,3,3.5])
plt.yticks([0,2,4,6,8,10])

# сделаем по этим штрихам сетку
plt.grid()

# функция легенды графика для отображения label'ов графиков
plt.legend()

# Можем сохранить график в высоком качестве
#plt.savefig('mygraph.png', dpi=300)

# И вызвать эту функцию чтобы график сразу после отрисовки не пропал, пока мы его не закроем
plt.show()