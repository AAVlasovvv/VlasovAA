from statistics import mean
import matplotlib.pyplot as plt

# Программа выводит два значения: a - это коэфициент МНК, b - это смещение по оси OY

with open("Ex2_3.txt", "r") as fin:
    data = fin.readlines()

I = [float(line.split()[0]) for line in data[1:]]
V = [float(line.split()[1]) for line in data[1:]]
print(I)
print(V)


def least_squares(xdata, ydata):
    assert all(isinstance(item, int | float) for item in xdata), 'the entered data is incorrect'
    assert all(isinstance(item, int | float) for item in ydata), 'the entered data is incorrect'
    a = (sum([x * y for x, y in zip(xdata, ydata)]) - mean(ydata) * sum(xdata)) / (
                sum([x ** 2 for x in xdata]) - mean(xdata) * sum(xdata))
    b = mean(ydata) - a * mean(xdata)
    
    return a, b


print(least_squares(I, V))
A1 = [0.006626722790085295, 0.5021990951771093, 1.0122943302998408, 1.5106540472414747, 2.00726422946997, 2.4976115473217693, 3.007289029495939, 3.499021364127101, 3.9968929669976947, 4.497534553302769, 4.994253428371713, 5.5033169496038425, 5.989667070655884, 6.495598220080854, 6.999180994114712, 7.488462600047755, 8.001239426985453, 8.50899397292564, 8.991801194981441, 9.480865653330039, 9.994331445257874, 10.484036281155094, 10.97806418961826, 11.488209733312994, 12.010053848662745, 12.500580023762588, 13.013203136764492, 13.501941483387286, 13.994573853473364, 14.48931205505209, 14.991792802888213, 15.501782858149541, 15.993052304984475, 16.510174524202156, 16.997804803899967, 17.499600666944147, 17.997082027217928, 18.501027027795715, 18.992139285694517, 19.497545782509572]

B1 =[73.37226349284988, 73.33400179788954, 74.07878560643324, 74.38046075471809, 75.91116228492277, 75.67103044541828, 75.20875355645768, 76.29042975764102, 76.77716665755979, 76.64314868290903, 77.10644635131735, 78.39366277064988, 78.15965794370223, 79.38055746097284, 79.21397419711157, 80.59872133654186, 81.0004890124732, 81.19519909931117, 82.20380686177096, 82.33898571030448, 82.02284175086545, 83.60701913822439, 84.19868076187997, 83.3635209008618, 84.89081354817642, 85.52363666741482, 85.36906765995795, 85.82456073277834, 86.23014282846614, 87.29382818268505, 88.16373591914663, 87.30349407083636, 89.0754470190119, 89.55970458458738, 90.06099799261237, 89.68768660610299, 91.82429493012708, 91.56631065056486, 92.45577378041294, 92.28492973818918]
res1 = (1.0005958694449342, 72.78514425204352)

A2 = [0.013456, 0.012321, 0.011236, 0.010201, 0.009216, 0.008281, 0.007396, 0.006561, 0.005776, 0.005041, 0.004356, 0.003136, 0.002116]
B2 = [0.019478154, 0.01808567, 0.016434701, 0.015212587, 0.013905378, 0.012654442, 0.011337035, 0.010275007, 0.009236473, 0.008337742, 0.007373863, 0.005765176, 0.004334758]
res2 = (1.3351968123373261, 0.0015478714057736414)

A3 =[0.206073641, 0.201556415, 0.167105992, 0.163064085, 0.133500166, 0.131971966, 0.108190879, 0.108265449, 0.082877049, 0.084247591, 0.073321752, 0.072448136, 0.057882868, 0.05816687, 0.046295206, 0.046493897, 0.035058505, 0.034893016]

B3 =[0.401994197, 0.401994197, 0.32183464, 0.32183464, 0.256032018, 0.256032018, 0.208175566, 0.208175566, 0.165104759, 0.165104759, 0.138783711, 0.138783711, 0.111266251, 0.111266251, 0.090927259, 0.090927259, 0.066999033, 0.066999033]

res3 = (1.9700869435445088, -0.002578176901043505)
# a, b = least_squares(I, V)

# fig, ax = plt.subplots()
# ax.plot(I, V, 'o', label="Данные эксперимента")

# xdata = list(range(0, 21))
# ax.plot(xdata, [a * x + b for x in xdata], label="Аппроксимация")
# ax.set_ylabel("Напряжение, V")
# ax.set_xlabel("Сила тока, A")
# ax.legend()
# # plt.savefig("fig1.png")
# plt.show()

A4 = [0.006626722790085295, 0.5021990951771093, 1.0122943302998408, 'chomik', 2.00726422946997, 2.4976115473217693, 3.007289029495939]
B4 = [0.206073641, 0.201556415, 0.167105992, 0.163064085, 0.133500166, 0.131971966, 0.108190879, 0.108265449, 0.082877049]
A5 = [0.006626722790085295, 0.5021990951771093, 1.0122943302998408, 0.133500166, 2.00726422946997, 2.4976115473217693, 3.007289029495939]
B5 = [0.206073641, 0.201556415, 0.167105992, 0.163064085, 'chomik', 0.131971966, 0.108190879, 0.108265449, 0.082877049]
A6 = [0.006626722790085295, 0.5021990951771093, 1.0122943302998408, 'chomik', 2.00726422946997, 2.4976115473217693, 3.007289029495939]
B6 = [0.206073641, 0.201556415, 0.167105992, 0.163064085, 'chomik', 0.131971966, 0.108190879, 0.108265449, 0.082877049]
import unittest

class TestFirst(unittest.TestCase):
    def test_least_squares(self):
        self.assertEqual(least_squares(A1, B1), res1, 'it should be 1.0005958694449342, 72.78514425204352')
        
class TestSecond(unittest.TestCase):
    def test_least_squares(self):
        self.assertEqual(least_squares(A2, B2), res2, 'it should be 1.3351968123373261, 0.0015478714057736414')
        
class TestTird(unittest.TestCase):
    def test_least_squares(self):
        self.assertEqual(least_squares(A3, B3), res3, 'it should be 1.9700869435445088, -0.002578176901043505')
        
class TestInvalidFirstArray(unittest.TestCase):
    def test_least_squares(self):
        with self.assertRaises(AssertionError):
            least_squares(A4, B4)
            
class TestInvalidSecondArray(unittest.TestCase):
    def test_least_squares(self):
        with self.assertRaises(AssertionError):
            least_squares(A5, B5)
            
class TestBothArraysAreInvalid(unittest.TestCase):
    def test_least_squares(self):
        with self.assertRaises(AssertionError):
            least_squares(A6, B6)

